library(pacman)
# Install bookdown for rendering because we'll need this. While we're at it, lets also install /load the tidyverse
p_load(bookdown, tidyverse, ggforce, flextable, latex2exp, png, magick) # basically just list all the packages you want here
library(tidyr)
library(dplyr)
install.packages('plotrix')
library('plotrix')
install.packages('flextable')
library('flextable')
library(ggplot2)
# Code to removing missing data from the `OA_activitydat_20190302_BIOL3207.csv` data frame.
data_clean <- data%>%filter(!(is.na(activity)))
data_clean
# Drop irrelevant columns
data_clean %>% select("species","treatment","animal_id","activity")
# Check spelling in species and treatment but also generate a summary table
data_clean$species <- as.factor(data_clean$species)
data_clean$treatment <- as.factor(data_clean$treatment)
levels(data_clean$species)
levels(data_clean$treatment)
data_new <- data_clean %>%
group_by(species,treatment) %>%
summarise(mean_activity = mean(activity),
mean_sl=mean(sl),
standarderror_activity=std.error(activity),
standarderror_sl=std.error(sl))
# Use flextable to render the summary table in a tidy format
flextable(
data_new,
col_keys = names(data_new),
cwidth = 0.75,
cheight = 0.25,
defaults = list(),
theme_fun = theme_booktabs
)
# ggplot figure showing mean activity for each treatment (Control, OA) for each species.
ggplot1<-ggplot(data = data_new, mapping = aes(x = treatment, y = mean_activity,color=species)) +
geom_point()
ggplot1
# Use ggsave to save the figure
setwd("./output/figures")
plot1 = ggplot1
ggsave("plot.png",plot1)
## Before adding in the .gitignore file, I saw the new ggplot I made and the path of the ggplot. Suppose we add this file, we may not see the plot or the path because the purpose of adding this file is to cancel the tracking of this file.
## I don't think so, because what we track is something that needs to change, and this kind of file doesn't change at any time, so we don't need to track it.
install.packages("flextable")
# Drop irrelevant columns
data_clean %>% select("species","treatment","animal_id","activity")
# Check spelling in species and treatment but also generate a summary table
data_clean$species <- as.factor(data_clean$species)
data_clean$treatment <- as.factor(data_clean$treatment)
levels(data_clean$species)
levels(data_clean$treatment)
data_new <- data_clean %>%
group_by(species,treatment) %>%
summarise(mean_activity = mean(activity),
mean_sl=mean(sl),
standarderror_activity=std.error(activity),
standarderror_sl=std.error(sl))
# Use flextable to render the summary table in a tidy format
flextable(
data_new,
col_keys = names(data_new),
cwidth = 0.75,
cheight = 0.25,
defaults = list(),
theme_fun = theme_booktabs
)
data0 <- data_clean %>% select("species", "treatment", "animal_id", "activity")
data1 <- data0[which(data0$species=='chromis'),]
data1
t.test(data1$activity)
t.test
View(data1)
t.test(data1$activity)
t.test
data0 <- data_clean %>% select("species", "treatment", "animal_id", "activity")
data1 <- data0[which(data0$species=='chromis'),]
data1
t.test(data1$activity)
data0 <- data_clean %>% select("species", "treatment", "animal_id", "activity")
data1 <- data0[which(data0$species=='chromis'),]
data1
data2 <- data0[which(data0$species=='lemon'),]
data2
t.test(data1$activity)
t.test(data2$activity)
t.test(data3$activity)
data0 <- data_clean %>% select("species", "treatment", "animal_id", "activity")
data1 <- data0[which(data0$species=='chromis'),]
data1
data2 <- data0[which(data0$species=='lemon'),]
data2
data3 <- data0[which(data0$species=='acantho'),]
data3
data4 <- data0[which(data0$species=='ambon'),]
data4
data5 <- data0[which(data0$species=='humbug'),]
data5
data6 <- data0[which(data0$species=='whitedams'),]
data6
t.test(data1$activity)
t.test(data2$activity)
t.test(data3$activity)
t.test(data4$activity)
t.test(data5$activity)
t.test(data6$activity)
summary(t.test(data1$activity))
t.test(data1$activity)
?t.test
head(data1)
t.test(data1$activity ~ data1$treatment)
data0 <- data_clean %>% select("species", "treatment", "animal_id", "activity")
data1 <- data0[which(data0$species=='chromis'),]
data1
data2 <- data0[which(data0$species=='lemon'),]
data2
data3 <- data0[which(data0$species=='acantho'),]
data3
data4 <- data0[which(data0$species=='ambon'),]
data4
data5 <- data0[which(data0$species=='humbug'),]
data5
data6 <- data0[which(data0$species=='whitedams'),]
data6
t.test(data1$activity ~ data1$treatment)
t.test(data2$activity ~ data2$treatment)
t.test(data3$activity ~ data3$treatment)
t.test(data4$activity ~ data4$treatment)
t.test(data5$activity ~ data5$treatment)
t.test(data6$activity ~ data6$treatment)
data11<-t.test(data1$activity ~ data1$treatment)
View(data11)
# Using the resulting object created above, which should be a table with all the summary statistics, t, df and p-value for each species create a table. Note that there is a tab.cap argument in the chunk arguments. Write a caption here.
flextable(
data11,
col_keys = names(data11),
cwidth = 0.75,
cheight = 0.25,
defaults = list(),
theme_fun = theme_booktabs
)
t.test(data1$activity ~ data1$treatment)
# Using the resulting object created above, which should be a table with all the summary statistics, t, df and p-value for each species create a table. Note that there is a tab.cap argument in the chunk arguments. Write a caption here.
flextable(
data1,
col_keys = names(data1),
cwidth = 0.75,
cheight = 0.25,
defaults = list(),
theme_fun = theme_booktabs
)
# Using the resulting object created above, which should be a table with all the summary statistics, t, df and p-value for each species create a table. Note that there is a tab.cap argument in the chunk arguments. Write a caption here.
flextable(
c(data1,data2,data3,data4,data5,data6),
col_keys = names(c(data1,data2,data3,data4,data5,data6)),
cwidth = 0.75,
cheight = 0.25,
defaults = list(),
theme_fun = theme_booktabs
)
# Using the resulting object created above, which should be a table with all the summary statistics, t, df and p-value for each species create a table. Note that there is a tab.cap argument in the chunk arguments. Write a caption here.
flextable(
data1,
col_keys = names(data1),
cwidth = 0.75,
cheight = 0.25,
defaults = list(),
theme_fun = theme_booktabs
)
t.test(data1$activity ~ data1$treatment)
data11<-t.test(data1$activity ~ data1$treatment)
View(data11)
View(data2)
View(data11)
# Using the resulting object created above, which should be a table with all the summary statistics, t, df and p-value for each species create a table. Note that there is a tab.cap argument in the chunk arguments. Write a caption here.
flextable(
data11$statistic,
col_keys = names(data11$statistic),
cwidth = 0.75,
cheight = 0.25,
defaults = list(),
theme_fun = theme_booktabs
)
View(data11)
# Using the resulting object created above, which should be a table with all the summary statistics, t, df and p-value for each species create a table. Note that there is a tab.cap argument in the chunk arguments. Write a caption here.
flextable(
data11$statistic,
col_keys = names(data11$statistic),
cwidth = 0.75,
cheight = 0.25,
defaults = list(),
theme_fun = theme_booktabs
)
# Using the resulting object created above, which should be a table with all the summary statistics, t, df and p-value for each species create a table. Note that there is a tab.cap argument in the chunk arguments. Write a caption here.
flextable(
data11$statistic,
col_keys = names(data_clean),
cwidth = 0.75,
cheight = 0.25,
defaults = list(),
theme_fun = theme_booktabs
)
data_statistic <- c(data11$statistic,data22$statistic,data33$statistic,data44$statistic,data55$statistic,data66$statistic)
data0 <- data_clean %>% select("species", "treatment", "animal_id", "activity")
data1 <- data0[which(data0$species=='chromis'),]
data1
data2 <- data0[which(data0$species=='lemon'),]
data2
data3 <- data0[which(data0$species=='acantho'),]
data3
data4 <- data0[which(data0$species=='ambon'),]
data4
data5 <- data0[which(data0$species=='humbug'),]
data5
data6 <- data0[which(data0$species=='whitedams'),]
data6
data11<-t.test(data1$activity ~ data1$treatment)
data22<-t.test(data2$activity ~ data2$treatment)
data33<-t.test(data3$activity ~ data3$treatment)
data44<-t.test(data4$activity ~ data4$treatment)
data55<-t.test(data5$activity ~ data5$treatment)
data66<-t.test(data6$activity ~ data6$treatment)
data_statistic <- c(data11$statistic,data22$statistic,data33$statistic,data44$statistic,data55$statistic,data66$statistic)
data_statistic
# Using the resulting object created above, which should be a table with all the summary statistics, t, df and p-value for each species create a table. Note that there is a tab.cap argument in the chunk arguments. Write a caption here.
flextable(data_statistic
,
col_keys = names(data_clean),
cwidth = 0.75,
cheight = 0.25,
defaults = list(),
theme_fun = theme_booktabs
)
# Using the resulting object created above, which should be a table with all the summary statistics, t, df and p-value for each species create a table. Note that there is a tab.cap argument in the chunk arguments. Write a caption here.
flextable(data_statistic,
col_keys = names(data_clean),
cwidth = 0.75,
cheight = 0.25,
defaults = list(),
theme_fun = theme_booktabs
)
is.data.frame(data_statistic)
as.data.frame(data_statistic)
is.data.frame(data_statistic)
as.data.frame(data_statistic)
is.data.frame(data_statistic)
# Using the resulting object created above, which should be a table with all the summary statistics, t, df and p-value for each species create a table. Note that there is a tab.cap argument in the chunk arguments. Write a caption here.
flextable(as.data.frame(data_statistic),
col_keys = names(data_clean),
cwidth = 0.75,
cheight = 0.25,
defaults = list(),
theme_fun = theme_booktabs
)
# Using the resulting object created above, which should be a table with all the summary statistics, t, df and p-value for each species create a table. Note that there is a tab.cap argument in the chunk arguments. Write a caption here.
flextable(as.data.frame(data_statistic),
col_keys = names(data_clean)
)
# Using the resulting object created above, which should be a table with all the summary statistics, t, df and p-value for each species create a table. Note that there is a tab.cap argument in the chunk arguments. Write a caption here.
flextable(as.data.frame(data_statistic),
col_keys = names(data_clean$species)
)
names_species <- c('chromis','lemon','acantho','ambon','humbug','whitedams')
# Using the resulting object created above, which should be a table with all the summary statistics, t, df and p-value for each species create a table. Note that there is a tab.cap argument in the chunk arguments. Write a caption here.
flextable(as.data.frame(data_statistic),
col_keys = names_species
)
# Using the resulting object created above, which should be a table with all the summary statistics, t, df and p-value for each species create a table. Note that there is a tab.cap argument in the chunk arguments. Write a caption here.
tibble(data_statistic)
# Using the resulting object created above, which should be a table with all the summary statistics, t, df and p-value for each species create a table. Note that there is a tab.cap argument in the chunk arguments. Write a caption here.
tibble(names_species,data_statistic)
# Using the resulting object created above, which should be a table with all the summary statistics, t, df and p-value for each species create a table. Note that there is a tab.cap argument in the chunk arguments. Write a caption here.
tibble(names_species,data_statistic,t,df,p-value)
# ggplot figure showing mean activity for each treatment (Control, OA) for each species.
ggplot1<-ggplot(data = data_new, mapping = aes(x = treatment, y = mean_activity,color=species)) +
geom_boxplot()
ggplot1
# ggplot figure showing mean activity for each treatment (Control, OA) for each species.
ggplot1<-ggplot(data = data_new, mapping = aes(x = species, y = mean_activity,color=treatment)) +
geom_boxplot()
ggplot1
pics1<-readPNG(",/pics/acantho")
pics1<-readPNG("./pics/acantho")
pics1<-readPNG("./pics/acantho.png")
ggplot1<-ggplot(data = data_new, mapping = aes(x = treatment, y = mean_activity,color=species)) +
geom_boxplot()+annotation_raster(pics1,1,2,20,25)
ggplot1
pics1<-readPNG("./pics/acantho.png")
ggplot1<-ggplot(data = data_new, mapping = aes(x = species, y = mean_activity,color=treatment)) +
geom_boxplot()+annotation_raster(pics1,1,2,20,25)
ggplot1
pics1<-readPNG("./pics/acantho.png")
ggplot1<-ggplot(data = data_new, mapping = aes(x = species, y = mean_activity,color=treatment)) +
geom_boxplot()+annotation_raster(pics1,0.5,1,20,25)
ggplot1
pics1<-readPNG("./pics/acantho.png")
ggplot1<-ggplot(data = data_new, mapping = aes(x = species, y = mean_activity,color=treatment)) +
geom_boxplot()+annotation_raster(pics1,0.5,2,20,25)
ggplot1
pics1<-readPNG("./pics/acantho.png")
ggplot1<-ggplot(data = data_new, mapping = aes(x = species, y = mean_activity,color=treatment)) +
geom_boxplot()+annotation_raster(pics1,0.5,1.5,20,25)
ggplot1
pics1<-readPNG("./pics/acantho.png")
pics2<-readPNG("./pics/ambon.png")
pics3<-readPNG("./pics/chromis.png")
pics4<-readPNG("./pics/humbug.png")
pics5<-readPNG("./pics/lemon.png")
pics6<-readPNG("./pics/whitedams.png")
ggplot1<-ggplot(data = data_new, mapping = aes(x = species, y = mean_activity,color=treatment)) +
geom_boxplot()+annotation_raster(pics1,0.5,1.5,20,25)+annotation_raster(pics2,2,3,20,25)+annotation_raster(pics3,3.5,4.5,10,15)+annotation_raster(pics4,5,6,20,25)+annotation_raster(pics5,6.5,7.5,20,25)+annotation_raster(pics6,8,9,20,25)
ggplot1
pics1<-readPNG("./pics/acantho.png")
pics2<-readPNG("./pics/ambon.png")
pics3<-readPNG("./pics/chromis.png")
pics4<-readPNG("./pics/humbug.png")
pics5<-readPNG("./pics/lemon.png")
pics6<-readPNG("./pics/whitedams.png")
ggplot1<-ggplot(data = data_new, mapping = aes(x = species, y = mean_activity,color=treatment)) +
geom_boxplot()+annotation_raster(pics1,0.5,1.5,20,25)+annotation_raster(pics2,1.5,2.5,20,25)+annotation_raster(pics3,2.5,3.5,10,15)+annotation_raster(pics4,3.5,4.5,20,25)+annotation_raster(pics5,4.5,5.5,20,25)+annotation_raster(pics6,5.5,6.5,20,25)
ggplot1
pics1<-readPNG("./pics/acantho.png")
pics2<-readPNG("./pics/ambon.png")
pics3<-readPNG("./pics/chromis.png")
pics4<-readPNG("./pics/humbug.png")
pics5<-readPNG("./pics/lemon.png")
pics6<-readPNG("./pics/whitedams.png")
ggplot1<-ggplot(data = data_new, mapping = aes(x = species, y = mean_activity,color=treatment)) +
geom_boxplot()+annotation_raster(pics1,0.5,1.5,20,25)+annotation_raster(pics2,1.5,2.5,20,25)+annotation_raster(pics3,2.5,3.5,30,35)+annotation_raster(pics4,3.5,4.5,20,25)+annotation_raster(pics5,4.5,5.5,20,25)+annotation_raster(pics6,5.5,6.5,20,25)
ggplot1
# ggplot figure showing mean activity for each treatment (Control, OA) for each species.
ggplot1<-ggplot(data = data_new, mapping = aes(x = species, y = activity,color=treatment)) +
geom_boxplot()
ggplot1
# ggplot figure showing mean activity for each treatment (Control, OA) for each species.
ggplot1<-ggplot(data = data_new, mapping = aes(x = species, y = mean_activity,color=treatment)) +
geom_boxplot()
ggplot1
pics1<-readPNG("./pics/acantho.png")
pics2<-readPNG("./pics/ambon.png")
pics3<-readPNG("./pics/chromis.png")
pics4<-readPNG("./pics/humbug.png")
pics5<-readPNG("./pics/lemon.png")
pics6<-readPNG("./pics/whitedams.png")
ggplot1<-ggplot(data = data_new, mapping = aes(x = species, y = mean_activity,color=treatment)) +
geom_boxplot()+annotation_raster(pics1,0.5,1.5,20,25)+annotation_raster(pics2,1.5,2.5,20,25)+annotation_raster(pics3,2.5,3.5,30,35)+annotation_raster(pics4,3.5,4.5,20,25)+annotation_raster(pics5,4.5,5.5,20,25)+annotation_raster(pics6,5.5,6.5,20,25)
ggplot1
# Use ggsave to save the figure
setwd("./output/figures")
plot1 = ggplot1
ggsave("plot.png",plot1)
# You want to make changes to your collaborators figure in Task 5. Maybe you want to create a figure that focuses only on three fish species instead of the 5. More specifically, chromis, lemon, and acantho. Add code here to revise their figure to do that.
data1 <- data_new %>% filter(species=="chromis")
data2 <- data_new %>% filter(species=="lemon")
data3 <- data_new %>% filter(species=="acantho")
datanew <- rbind(data1,data2,data3)
datanew
ggplotnew<-ggplot(data = datanew, mapping = aes(x = species, y = mean_activity,color=treatment)) +
geom_boxplot()
ggplotnew
# You want to make changes to your collaborators figure in Task 5. Maybe you want to create a figure that focuses only on three fish species instead of the 5. More specifically, chromis, lemon, and acantho. Add code here to revise their figure to do that.
data1 <- data_new %>% filter(species=="chromis")
data2 <- data_new %>% filter(species=="lemon")
data3 <- data_new %>% filter(species=="acantho")
datanew <- rbind(data1,data2,data3)
datanew
ggplotnew<-ggplot(data = datanew, mapping = aes(x = species, y = mean_activity,color=treatment)) +
geom_boxplot()+annotation_raster(pics1,0.5,1.5,20,25)+annotation_raster(pics3,1.5,2.5,20,25)+annotation_raster(pics5,2.5,3.5,30,35)
ggplotnew
# You want to make changes to your collaborators figure in Task 5. Maybe you want to create a figure that focuses only on three fish species instead of the 5. More specifically, chromis, lemon, and acantho. Add code here to revise their figure to do that.
data1 <- data_new %>% filter(species=="chromis")
data2 <- data_new %>% filter(species=="lemon")
data3 <- data_new %>% filter(species=="acantho")
datanew <- rbind(data1,data2,data3)
datanew
ggplotnew<-ggplot(data = datanew, mapping = aes(x = species, y = mean_activity,color=treatment)) +
geom_boxplot()+annotation_raster(pics1,0.5,1.5,20,22)+annotation_raster(pics3,1.5,2.5,20,22)+annotation_raster(pics5,2.5,3.5,20,22)
ggplotnew
# Using the resulting object created above, which should be a table with all the summary statistics, t, df and p-value for each species create a table. Note that there is a tab.cap argument in the chunk arguments. Write a caption here.
tibble(names_species,data_statistic)
data_pvalue <- c(data11$p.value,data22$p.value,data33$p.value,data44$p.value,data55$p.value,data66$p.value)
data0 <- data_clean %>% select("species", "treatment", "animal_id", "activity")
data1 <- data0[which(data0$species=='chromis'),]
data1
data2 <- data0[which(data0$species=='lemon'),]
data2
data3 <- data0[which(data0$species=='acantho'),]
data3
data4 <- data0[which(data0$species=='ambon'),]
data4
data5 <- data0[which(data0$species=='humbug'),]
data5
data6 <- data0[which(data0$species=='whitedams'),]
data6
data11<-t.test(data1$activity ~ data1$treatment)
data22<-t.test(data2$activity ~ data2$treatment)
data33<-t.test(data3$activity ~ data3$treatment)
data44<-t.test(data4$activity ~ data4$treatment)
data55<-t.test(data5$activity ~ data5$treatment)
data66<-t.test(data6$activity ~ data6$treatment)
data_statistic <- c(data11$statistic,data22$statistic,data33$statistic,data44$statistic,data55$statistic,data66$statistic)
data_pvalue <- c(data11$p.value,data22$p.value,data33$p.value,data44$p.value,data55$p.value,data66$p.value)
as.data.frame(data_statistic)
is.data.frame(data_statistic)
names_species <- c('chromis','lemon','acantho','ambon','humbug','whitedams')
data0 <- data_clean %>% select("species", "treatment", "animal_id", "activity")
data1 <- data0[which(data0$species=='chromis'),]
data1
data2 <- data0[which(data0$species=='lemon'),]
data2
data3 <- data0[which(data0$species=='acantho'),]
data3
data4 <- data0[which(data0$species=='ambon'),]
data4
data5 <- data0[which(data0$species=='humbug'),]
data5
data6 <- data0[which(data0$species=='whitedams'),]
data6
data11<-t.test(data1$activity ~ data1$treatment)
data22<-t.test(data2$activity ~ data2$treatment)
data33<-t.test(data3$activity ~ data3$treatment)
data44<-t.test(data4$activity ~ data4$treatment)
data55<-t.test(data5$activity ~ data5$treatment)
data66<-t.test(data6$activity ~ data6$treatment)
data_statistic <- c(data11$statistic,data22$statistic,data33$statistic,data44$statistic,data55$statistic,data66$statistic)
data_pvalue <- c(data11$p.value,data22$p.value,data33$p.value,data44$p.value,data55$p.value,data66$p.value)
data_df <- c(data11$parameter,data22$parameter,data33$parameter,data44$parameter,data55$parameter,data66$parameter)
as.data.frame(data_statistic)
is.data.frame(data_statistic)
names_species <- c('chromis','lemon','acantho','ambon','humbug','whitedams')
# Using the resulting object created above, which should be a table with all the summary statistics, t, df and p-value for each species create a table. Note that there is a tab.cap argument in the chunk arguments. Write a caption here.
tibble(names_species,data_statistic,data_pvalue,data_df)
data0 <- data_clean %>% select("species", "treatment", "animal_id", "activity")
data1 <- data0[which(data0$species=='chromis'),]
data1
data2 <- data0[which(data0$species=='lemon'),]
data2
data3 <- data0[which(data0$species=='acantho'),]
data3
data4 <- data0[which(data0$species=='ambon'),]
data4
data5 <- data0[which(data0$species=='humbug'),]
data5
data6 <- data0[which(data0$species=='whitedams'),]
data6
data11<-t.test(data1$activity ~ data1$treatment)
data22<-t.test(data2$activity ~ data2$treatment)
data33<-t.test(data3$activity ~ data3$treatment)
data44<-t.test(data4$activity ~ data4$treatment)
data55<-t.test(data5$activity ~ data5$treatment)
data66<-t.test(data6$activity ~ data6$treatment)
data_statistic <- c(data11$statistic,data22$statistic,data33$statistic,data44$statistic,data55$statistic,data66$statistic)
data_pvalue <- c(data11$p.value,data22$p.value,data33$p.value,data44$p.value,data55$p.value,data66$p.value)
data_df <- c(data11$parameter,data22$parameter,data33$parameter,data44$parameter,data55$parameter,data66$parameter)
as.data.frame(data_statistic)
is.data.frame(data_statistic)
names_species <- c('chromis','lemon','acantho','ambon','humbug','whitedams')
t.test
data11<-t.test(data1$activity ~ data1$treatment)
data0 <- data_clean %>% select("species", "treatment", "animal_id", "activity")
data1 <- data0[which(data0$species=='chromis'),]
data1
data2 <- data0[which(data0$species=='lemon'),]
data2
data3 <- data0[which(data0$species=='acantho'),]
data3
data4 <- data0[which(data0$species=='ambon'),]
data4
data5 <- data0[which(data0$species=='humbug'),]
data5
data6 <- data0[which(data0$species=='whitedams'),]
data6
data11<-t.test(data1$activity ~ data1$treatment)
data22<-t.test(data2$activity ~ data2$treatment)
data33<-t.test(data3$activity ~ data3$treatment)
data44<-t.test(data4$activity ~ data4$treatment)
data55<-t.test(data5$activity ~ data5$treatment)
data66<-t.test(data6$activity ~ data6$treatment)
data_statistic <- c(data11$statistic,data22$statistic,data33$statistic,data44$statistic,data55$statistic,data66$statistic)
data_pvalue <- c(data11$p.value,data22$p.value,data33$p.value,data44$p.value,data55$p.value,data66$p.value)
data_df <- c(data11$parameter,data22$parameter,data33$parameter,data44$parameter,data55$parameter,data66$parameter)
as.data.frame(data_statistic)
is.data.frame(data_statistic)
names_species <- c('chromis','lemon','acantho','ambon','humbug','whitedams')
data0 <- data_clean %>% select("species", "treatment", "animal_id", "activity")
data1 <- data0[which(data0$species=='chromis'),]
data1
data2 <- data0[which(data0$species=='lemon'),]
data2
data3 <- data0[which(data0$species=='acantho'),]
data3
data4 <- data0[which(data0$species=='ambon'),]
data4
data5 <- data0[which(data0$species=='humbug'),]
data5
data6 <- data0[which(data0$species=='whitedams'),]
data6
data11<-t.test(data1$activity ~ data1$treatment)
data22<-t.test(data2$activity ~ data2$treatment)
data33<-t.test(data3$activity ~ data3$treatment)
data44<-t.test(data4$activity ~ data4$treatment)
data55<-t.test(data5$activity ~ data5$treatment)
data66<-t.test(data6$activity ~ data6$treatment)
data_statistic <- c(data11$statistic,data22$statistic,data33$statistic,data44$statistic,data55$statistic,data66$statistic)
data_pvalue <- c(data11$p.value,data22$p.value,data33$p.value,data44$p.value,data55$p.value,data66$p.value)
data_df <- c(data11$parameter,data22$parameter,data33$parameter,data44$parameter,data55$parameter,data66$parameter)
as.data.frame(data_statistic)
is.data.frame(data_statistic)
names_species <- c('chromis','lemon','acantho','ambon','humbug','whitedams')
# Using the resulting object created above, which should be a table with all the summary statistics, t, df and p-value for each species create a table. Note that there is a tab.cap argument in the chunk arguments. Write a caption here.
tibble(names_species,data_statistic,data_pvalue,data_df)
